unit GateCore;

interface

uses
  IdContext, System.Classes, JabberServer, JabberServerSession;

type
  TObjProc = procedure of object;

  TGateCore = class(TComponent)
    procedure KillPidIfNeeded;
  private
    FDecClients: TObjProc;
    FIncClients: TObjProc;
    FLog: TStrings;
    procedure KillProcess(const lPID: Cardinal);
    procedure OnSessionDestroy(AJabSession: TJabberServerSession);
  public
    Jab: TJabberServer;
    constructor Create(ALog: TStrings);
    procedure Init;
    procedure Log(const str: string);
    procedure OnNewSession(AJabSession: TJabberServerSession);
    property DecClients: TObjProc read FDecClients write FDecClients;
    property IncClients: TObjProc read FIncClients write FIncClients;
  end;

implementation

uses
  VKtoXMPPSession, uvsDebug, GateGlobals, Vcl.Forms, System.SysUtils, Windows;

constructor TGateCore.Create(ALog: TStrings);
begin
  FLog:=ALog;
  Init;
end;

procedure TGateCore.Init;
begin
  InitVsDbg(isDbg, true, AbsPath('log\'));
  Log('Starting '+SERVER_VER+' Path: '+Application.ExeName);


  KillPidIfNeeded;

  Jab := TJabberServer.Create(Self);
  Jab.OnSessionCreate:=OnNewSession;
  Jab.OnSessionDestroy:=OnSessionDestroy;
  Jab.DefaultPort:=5223;
  if isDbg then
    Jab.DefaultPort:=5224;

  Log('aaa');Log('aaa');Log('aaa');Log('aaa');
  Log('bbb');

  while not Jab.Active do
  begin
    try
      Jab.Active:=true;
    except on e:Exception do
      begin
        Log(e.Message);
        Application.ProcessMessages;
        Sleep(1000);
      end;
    end;
  end;

  Log('Port Bound: '+Jab.DefaultPort);

end;

procedure TGateCore.KillPidIfNeeded;
var
  lPID: Cardinal;
begin
  lPID:=0;

  if ParamCount<2 then
    exit;

  if ParamStr(1)<>'-killpid' then
    exit;
  try
    lPID := StrToInt(ParamStr(2));
  except
  end;

  if lPid<1 then
    exit;

  KillProcess(lPID);
  //Sleep(10000);
end;

procedure TGateCore.KillProcess(const lPID: Cardinal);
var
  lCurrentProcPID: Cardinal;
  lProcHandle: Cardinal;
begin
  try
    lCurrentProcPID := GetCurrentProcessId;
    if (lPID <> INVALID_HANDLE_VALUE) and (lCurrentProcPID <> lPID) then
    begin
      lProcHandle := OpenProcess(PROCESS_TERMINATE, False, lPID);
      if lProcHandle=0 then
      begin
        GateLog('Nothing to kill');
        exit;
      end;

      GateLog('Process Exisits. KILLING PID '+IntToStr(lPID));


      Windows.TerminateProcess(lProcHandle, 0);
      WaitForSingleObject(lProcHandle, Infinite);
      CloseHandle(lProcHandle);
      //Result := True;
    end;
  except
    //raise EExternalException.Create(GetLastErrorString);
  end;
end;

procedure TGateCore.Log(const str: string);
begin
  (*TODO: extracted code
  AddToLog(str);
  *)
  GateLog(str);
  exit;
  //FLog.Add(str);  //TODO: крит. секция
end;

procedure TGateCore.OnSessionDestroy(AJabSession: TJabberServerSession);
begin
  if Assigned(@FDecClients) then
  begin
    cs.Enter;
    FDecClients;
    cs.Leave;
  end;
end;

procedure TGateCore.OnNewSession(AJabSession: TJabberServerSession);
begin
  TVKtoXmppSession.Create(AJabSession).OnLog:=Log;
  if Assigned(@FIncClients) then
  begin
    cs.Enter;
    FIncClients;
    cs.Leave;
  end;
end;

end.

